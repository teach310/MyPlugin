// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.8 (swiftlang-5.8.0.124.2 clang-1403.0.22.11.100)
// swift-module-flags: -target arm64-apple-ios11.0 -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name SamplePlugin
// swift-module-flags-ignorable: -enable-bare-slash-regex
import CoreBluetooth
import Foundation
import Swift
import _Concurrency
import _StringProcessing
@objc @_inheritsConvenienceInitializers public class BLESample : ObjectiveC.NSObject, CoreBluetooth.CBCentralManagerDelegate, CoreBluetooth.CBPeripheralDelegate {
  @objc override dynamic public init()
  public func scan()
  public func isConnected() -> Swift.Bool
  public func writeData()
  @objc public func centralManagerDidUpdateState(_ central: CoreBluetooth.CBCentralManager)
  @objc public func centralManager(_ central: CoreBluetooth.CBCentralManager, didDiscover peripheral: CoreBluetooth.CBPeripheral, advertisementData: [Swift.String : Any], rssi RSSI: Foundation.NSNumber)
  @objc public func centralManager(_ central: CoreBluetooth.CBCentralManager, didConnect peripheral: CoreBluetooth.CBPeripheral)
  @objc public func centralManager(_ central: CoreBluetooth.CBCentralManager, didFailToConnect peripheral: CoreBluetooth.CBPeripheral, error: (any Swift.Error)?)
  @objc public func centralManager(_ central: CoreBluetooth.CBCentralManager, didDisconnectPeripheral peripheral: CoreBluetooth.CBPeripheral, error: (any Swift.Error)?)
  @objc public func peripheral(_ peripheral: CoreBluetooth.CBPeripheral, didDiscoverServices error: (any Swift.Error)?)
  @objc public func peripheral(_ peripheral: CoreBluetooth.CBPeripheral, didDiscoverCharacteristicsFor service: CoreBluetooth.CBService, error: (any Swift.Error)?)
  @objc public func peripheral(_ peripheral: CoreBluetooth.CBPeripheral, didUpdateValueFor characteristic: CoreBluetooth.CBCharacteristic, error: (any Swift.Error)?)
  @objc public func peripheral(_ peripheral: CoreBluetooth.CBPeripheral, didWriteValueFor characteristic: CoreBluetooth.CBCharacteristic, error: (any Swift.Error)?)
  @objc public func peripheral(_ peripheral: CoreBluetooth.CBPeripheral, didUpdateNotificationStateFor characteristic: CoreBluetooth.CBCharacteristic, error: (any Swift.Error)?)
  @objc deinit
}
@objc @_inheritsConvenienceInitializers public class BLEServerSample : ObjectiveC.NSObject, CoreBluetooth.CBPeripheralManagerDelegate {
  @objc override dynamic public init()
  public func onClick()
  @objc public func peripheralManagerDidUpdateState(_ peripheral: CoreBluetooth.CBPeripheralManager)
  @objc public func peripheralManager(_ peripheral: CoreBluetooth.CBPeripheralManager, didAdd service: CoreBluetooth.CBService, error: (any Swift.Error)?)
  @objc public func peripheralManagerDidStartAdvertising(_ peripheral: CoreBluetooth.CBPeripheralManager, error: (any Swift.Error)?)
  @objc public func peripheralManager(_ peripheral: CoreBluetooth.CBPeripheralManager, central: CoreBluetooth.CBCentral, didSubscribeTo characteristic: CoreBluetooth.CBCharacteristic)
  @objc public func peripheralManager(_ peripheral: CoreBluetooth.CBPeripheralManager, didReceiveRead request: CoreBluetooth.CBATTRequest)
  @objc public func peripheralManager(_ peripheral: CoreBluetooth.CBPeripheralManager, didReceiveWrite requests: [CoreBluetooth.CBATTRequest])
  @objc public func peripheralManager(_ peripheral: CoreBluetooth.CBPeripheralManager, central: CoreBluetooth.CBCentral, didUnsubscribeFrom characteristic: CoreBluetooth.CBCharacteristic)
  @objc public func peripheralManagerIsReady(toUpdateSubscribers peripheral: CoreBluetooth.CBPeripheralManager)
  @objc deinit
}
extension SamplePlugin.CB4UCentralManager {
  public func characteristicProperties(_ peripheralId: Swift.String, _ serviceUUID: CoreBluetooth.CBUUID, _ characteristicUUID: CoreBluetooth.CBUUID) -> Swift.Int32
}
extension SamplePlugin.CB4UCentralManager {
  public func peripheralName(_ peripheralId: Swift.String, _ sb: Swift.UnsafeMutablePointer<Swift.CChar>, _ sbSize: Swift.Int) -> Swift.Int32
  public func peripheralState(_ peripheralId: Swift.String) -> Swift.Int32
  public func discoverServices(_ peripheralId: Swift.String, _ serviceUUIDs: [CoreBluetooth.CBUUID]?) -> Swift.Int32
  public func discoverCharacteristics(_ peripheralId: Swift.String, _ serviceUUID: CoreBluetooth.CBUUID, _ characteristicUUIDs: [CoreBluetooth.CBUUID]?) -> Swift.Int32
  public func readValue(_ peripheralId: Swift.String, _ serviceUUID: CoreBluetooth.CBUUID, _ characteristicUUID: CoreBluetooth.CBUUID) -> Swift.Int32
  public func writeValue(_ peripheralId: Swift.String, _ serviceUUID: CoreBluetooth.CBUUID, _ characteristicUUID: CoreBluetooth.CBUUID, _ data: Foundation.Data, _ type: CoreBluetooth.CBCharacteristicWriteType) -> Swift.Int32
  public func setNotifyValue(_ peripheralId: Swift.String, _ serviceUUID: CoreBluetooth.CBUUID, _ characteristicUUID: CoreBluetooth.CBUUID, _ enabled: Swift.Bool) -> Swift.Int32
  public func readRSSI(_ peripheralId: Swift.String) -> Swift.Int32
}
@objc @_inheritsConvenienceInitializers public class CB4UCentralManager : ObjectiveC.NSObject {
  @objc override dynamic public init()
  public func retrievePeripherals(withIdentifiers identifiers: [Foundation.UUID], _ sb: Swift.UnsafeMutablePointer<Swift.CChar>, _ sbSize: Swift.Int) -> Swift.Int32
  public func scanForPeripherals(withServices serviceUUIDs: [CoreBluetooth.CBUUID]?)
  public func stopScan()
  public var isScanning: Swift.Bool {
    get
  }
  public func connect(_ peripheralId: Swift.String) -> Swift.Int32
  public func cancelPeripheralConnection(_ peripheralId: Swift.String) -> Swift.Int32
  @objc deinit
}
extension SamplePlugin.CB4UCentralManager : CoreBluetooth.CBCentralManagerDelegate {
  @objc dynamic public func centralManagerDidUpdateState(_ central: CoreBluetooth.CBCentralManager)
  @objc dynamic public func centralManager(_ central: CoreBluetooth.CBCentralManager, didConnect peripheral: CoreBluetooth.CBPeripheral)
  @objc dynamic public func centralManager(_ central: CoreBluetooth.CBCentralManager, didDisconnectPeripheral peripheral: CoreBluetooth.CBPeripheral, error: (any Swift.Error)?)
  @objc dynamic public func centralManager(_ central: CoreBluetooth.CBCentralManager, didFailToConnect peripheral: CoreBluetooth.CBPeripheral, error: (any Swift.Error)?)
  @objc dynamic public func centralManager(_ central: CoreBluetooth.CBCentralManager, didDiscover peripheral: CoreBluetooth.CBPeripheral, advertisementData: [Swift.String : Any], rssi RSSI: Foundation.NSNumber)
}
extension SamplePlugin.CB4UCentralManager : CoreBluetooth.CBPeripheralDelegate {
  @objc dynamic public func peripheral(_ peripheral: CoreBluetooth.CBPeripheral, didDiscoverServices error: (any Swift.Error)?)
  @objc dynamic public func peripheral(_ peripheral: CoreBluetooth.CBPeripheral, didDiscoverCharacteristicsFor service: CoreBluetooth.CBService, error: (any Swift.Error)?)
  @objc dynamic public func peripheral(_ peripheral: CoreBluetooth.CBPeripheral, didUpdateValueFor characteristic: CoreBluetooth.CBCharacteristic, error: (any Swift.Error)?)
  @objc dynamic public func peripheral(_ peripheral: CoreBluetooth.CBPeripheral, didWriteValueFor characteristic: CoreBluetooth.CBCharacteristic, error: (any Swift.Error)?)
  @objc dynamic public func peripheral(_ peripheral: CoreBluetooth.CBPeripheral, didUpdateNotificationStateFor characteristic: CoreBluetooth.CBCharacteristic, error: (any Swift.Error)?)
  @objc dynamic public func peripheral(_ peripheral: CoreBluetooth.CBPeripheral, didReadRSSI RSSI: Foundation.NSNumber, error: (any Swift.Error)?)
}
@_cdecl("cb4u_central_manager_new")
public func cb4u_central_manager_new() -> Swift.UnsafeMutableRawPointer
@_cdecl("cb4u_central_manager_release")
public func cb4u_central_manager_release(_ centralPtr: Swift.UnsafeRawPointer)
public typealias CB4UCentralManagerDidUpdateStateHandler = @convention(c) (Swift.UnsafeRawPointer, Swift.Int32) -> Swift.Void
public typealias CB4UCentralManagerDidDiscoverPeripheralHandler = @convention(c) (Swift.UnsafeRawPointer, Swift.UnsafePointer<Swift.CChar>, Swift.UnsafePointer<Swift.CChar>) -> Swift.Void
public typealias CB4UCentralManagerDidConnectPeripheralHandler = @convention(c) (Swift.UnsafeRawPointer, Swift.UnsafePointer<Swift.CChar>) -> Swift.Void
public typealias CB4UCentralManagerDidFailToConnectPeripheralHandler = @convention(c) (Swift.UnsafeRawPointer, Swift.UnsafePointer<Swift.CChar>, Swift.Int32) -> Swift.Void
public typealias CB4UCentralManagerDidDisconnectPeripheralHandler = @convention(c) (Swift.UnsafeRawPointer, Swift.UnsafePointer<Swift.CChar>, Swift.Int32) -> Swift.Void
public typealias CB4UPeripheralDidDiscoverServicesHandler = @convention(c) (Swift.UnsafeRawPointer, Swift.UnsafePointer<Swift.CChar>, Swift.UnsafePointer<Swift.CChar>, Swift.Int32) -> Swift.Void
public typealias CB4UPeripheralDidDiscoverCharacteristicsHandler = @convention(c) (Swift.UnsafeRawPointer, Swift.UnsafePointer<Swift.CChar>, Swift.UnsafePointer<Swift.CChar>, Swift.UnsafePointer<Swift.CChar>, Swift.Int32) -> Swift.Void
public typealias CB4UPeripheralDidUpdateValueForCharacteristicHandler = @convention(c) (Swift.UnsafeRawPointer, Swift.UnsafePointer<Swift.CChar>, Swift.UnsafePointer<Swift.CChar>, Swift.UnsafePointer<Swift.CChar>, Swift.UnsafePointer<Swift.UInt8>, Swift.Int32, Swift.Int32) -> Swift.Void
public typealias CB4UPeripheralDidWriteValueForCharacteristicHandler = @convention(c) (Swift.UnsafeRawPointer, Swift.UnsafePointer<Swift.CChar>, Swift.UnsafePointer<Swift.CChar>, Swift.UnsafePointer<Swift.CChar>, Swift.Int32) -> Swift.Void
public typealias CB4UPeripheralDidUpdateNotificationStateForCharacteristicHandler = @convention(c) (Swift.UnsafeRawPointer, Swift.UnsafePointer<Swift.CChar>, Swift.UnsafePointer<Swift.CChar>, Swift.UnsafePointer<Swift.CChar>, Swift.Int32, Swift.Int32) -> Swift.Void
public typealias CB4UPeripheralDidReadRSSIHandler = @convention(c) (Swift.UnsafeRawPointer, Swift.UnsafePointer<Swift.CChar>, Swift.Int32, Swift.Int32) -> Swift.Void
@_cdecl("cb4u_central_manager_register_handlers")
public func cb4u_central_manager_register_handlers(_ centralPtr: Swift.UnsafeRawPointer, _ didUpdateStateHandler: SamplePlugin.CB4UCentralManagerDidUpdateStateHandler, _ didDiscoverPeripheralHandler: SamplePlugin.CB4UCentralManagerDidDiscoverPeripheralHandler, _ didConnectPeripheralHandler: SamplePlugin.CB4UCentralManagerDidConnectPeripheralHandler, _ didFailToConnectPeripheralHandler: SamplePlugin.CB4UCentralManagerDidFailToConnectPeripheralHandler, _ didDisconnectPeripheralHandler: SamplePlugin.CB4UCentralManagerDidDisconnectPeripheralHandler, _ didDiscoverServicesHandler: SamplePlugin.CB4UPeripheralDidDiscoverServicesHandler, _ didDiscoverCharacteristicsHandler: SamplePlugin.CB4UPeripheralDidDiscoverCharacteristicsHandler, _ didUpdateValueForCharacteristicHandler: SamplePlugin.CB4UPeripheralDidUpdateValueForCharacteristicHandler, _ didWriteValueForCharacteristicHandler: SamplePlugin.CB4UPeripheralDidWriteValueForCharacteristicHandler, _ didUpdateNotificationStateForCharacteristicHandler: SamplePlugin.CB4UPeripheralDidUpdateNotificationStateForCharacteristicHandler, _ didReadRSSIHandler: SamplePlugin.CB4UPeripheralDidReadRSSIHandler)
@_cdecl("cb4u_central_manager_retrieve_peripherals_with_identifiers")
public func cb4u_central_manager_retrieve_peripherals_with_identifiers(_ centralPtr: Swift.UnsafeRawPointer, _ peripheralIds: Swift.UnsafePointer<Swift.UnsafePointer<Swift.CChar>?>, _ peripheralIdsCount: Swift.Int32, _ sb: Swift.UnsafeMutablePointer<Swift.CChar>, _ sbSize: Swift.Int32) -> Swift.Int32
@_cdecl("cb4u_central_manager_scan_for_peripherals")
public func cb4u_central_manager_scan_for_peripherals(_ centralPtr: Swift.UnsafeRawPointer, _ serviceUUIDs: Swift.UnsafePointer<Swift.UnsafePointer<Swift.CChar>?>, _ serviceUUIDsCount: Swift.Int32)
@_cdecl("cb4u_central_manager_stop_scan")
public func cb4u_central_manager_stop_scan(_ centralPtr: Swift.UnsafeRawPointer)
@_cdecl("cb4u_central_manager_is_scanning")
public func cb4u_central_manager_is_scanning(_ centralPtr: Swift.UnsafeRawPointer) -> Swift.Bool
@_cdecl("cb4u_central_manager_connect_peripheral")
public func cb4u_central_manager_connect_peripheral(_ centralPtr: Swift.UnsafeRawPointer, _ peripheralId: Swift.UnsafePointer<Swift.CChar>) -> Swift.Int32
@_cdecl("cb4u_central_manager_cancel_peripheral_connection")
public func cb4u_central_manager_cancel_peripheral_connection(_ centralPtr: Swift.UnsafeRawPointer, _ peripheralId: Swift.UnsafePointer<Swift.CChar>) -> Swift.Int32
@_cdecl("cb4u_central_manager_peripheral_name")
public func cb4u_central_manager_peripheral_name(_ centralPtr: Swift.UnsafeRawPointer, _ peripheralId: Swift.UnsafePointer<Swift.CChar>, _ sb: Swift.UnsafeMutablePointer<Swift.CChar>, _ sbSize: Swift.Int32) -> Swift.Int32
@_cdecl("cb4u_central_manager_peripheral_state")
public func cb4u_central_manager_peripheral_state(_ centralPtr: Swift.UnsafeRawPointer, _ peripheralId: Swift.UnsafePointer<Swift.CChar>) -> Swift.Int32
@_cdecl("cb4u_central_manager_characteristic_properties")
public func cb4u_central_manager_characteristic_properties(_ centralPtr: Swift.UnsafeRawPointer, _ peripheralId: Swift.UnsafePointer<Swift.CChar>, _ serviceId: Swift.UnsafePointer<Swift.CChar>, _ characteristicId: Swift.UnsafePointer<Swift.CChar>) -> Swift.Int32
@_cdecl("cb4u_peripheral_discover_services")
public func cb4u_peripheral_discover_services(_ centralPtr: Swift.UnsafeRawPointer, _ peripheralId: Swift.UnsafePointer<Swift.CChar>, _ serviceUUIDs: Swift.UnsafePointer<Swift.UnsafePointer<Swift.CChar>?>, _ serviceUUIDsCount: Swift.Int32) -> Swift.Int32
@_cdecl("cb4u_peripheral_discover_characteristics")
public func cb4u_peripheral_discover_characteristics(_ centralPtr: Swift.UnsafeRawPointer, _ peripheralId: Swift.UnsafePointer<Swift.CChar>, _ serviceId: Swift.UnsafePointer<Swift.CChar>, _ characteristicUUIDs: Swift.UnsafePointer<Swift.UnsafePointer<Swift.CChar>?>, _ characteristicUUIDsCount: Swift.Int32) -> Swift.Int32
@_cdecl("cb4u_peripheral_read_value_for_characteristic")
public func cb4u_peripheral_read_value_for_characteristic(_ centralPtr: Swift.UnsafeRawPointer, _ peripheralId: Swift.UnsafePointer<Swift.CChar>, _ serviceId: Swift.UnsafePointer<Swift.CChar>, _ characteristicId: Swift.UnsafePointer<Swift.CChar>) -> Swift.Int32
@_cdecl("cb4u_peripheral_write_value_for_characteristic")
public func cb4u_peripheral_write_value_for_characteristic(_ centralPtr: Swift.UnsafeRawPointer, _ peripheralId: Swift.UnsafePointer<Swift.CChar>, _ serviceId: Swift.UnsafePointer<Swift.CChar>, _ characteristicId: Swift.UnsafePointer<Swift.CChar>, _ dataBytes: Swift.UnsafePointer<Swift.UInt8>, _ dataLength: Swift.Int32, _ writeType: Swift.Int32) -> Swift.Int32
@_cdecl("cb4u_peripheral_set_notify_value_for_characteristic")
public func cb4u_peripheral_set_notify_value_for_characteristic(_ centralPtr: Swift.UnsafeRawPointer, _ peripheralId: Swift.UnsafePointer<Swift.CChar>, _ serviceId: Swift.UnsafePointer<Swift.CChar>, _ characteristicId: Swift.UnsafePointer<Swift.CChar>, _ enabled: Swift.Bool) -> Swift.Int32
@_cdecl("cb4u_central_manager_peripheral_read_rssi")
public func cb4u_central_manager_peripheral_read_rssi(_ centralPtr: Swift.UnsafeRawPointer, _ peripheralId: Swift.UnsafePointer<Swift.CChar>) -> Swift.Int32
@_cdecl("sample_plugin_helloworld")
public func sample_plugin_helloworld() -> Swift.Int32
